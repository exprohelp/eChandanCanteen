//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eInventory.lsAccounts {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://exprohelp.com/", ConfigurationName="lsAccounts.Accounts_WebServiceSoap")]
    public interface Accounts_WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateVoucherModifyInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateVoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetPatientRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientRegister(out string processInfo, string unit_id, string fromdate, string Logic, string SearchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_ModifyVoucher", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_ModifyVoucher(string act_type, string voucher_no, string repTo_Ledger_code, string repBy_Ledger_code, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Account_PurchaseQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Account_PurchaseQueries(out string processInfo, string unit_id, string purchase_id, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CorrectInvoiceType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CorrectInvoiceType(out string processInfo, string unit_id, string purch_id, string inv_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TaxQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TaxQueries(out string processInfo, string unit_id, string stateName, string logic, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Pharmacy_UnitMismatchInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Pharmacy_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Diagnostic_UnitMismatchInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Diagnostic_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Form_Sales_UP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Form_Sales_UP(out string processInfo, string from, string to);
        
        // CODEGEN: Parameter 'Form_SalesPDFResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Form_SalesPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eInventory.lsAccounts.Form_SalesPDFResponse Form_SalesPDF(eInventory.lsAccounts.Form_SalesPDFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InserteTax_4Det", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InserteTax_4Det(out string processInfo, int mth, string finyear, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetMonthlyTax", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMonthlyTax(out string processInfo, int Month, string Fin_year, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AdjustSales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AdjustSales(out string processInfo, string from, string to, string state, string login_id, decimal Reduce, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ac_GetReceivableSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ac_GetReceivableSummary(out string processInfo, string Comp_id, string unit_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ShopInfo_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShopInfo_Queries(out string processInfo, string unit_id, string logic, string prm_1, string prm_2, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ins_equip_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Ins_equip_info(
                    out string processInfo, 
                    string unit_id, 
                    string v_code, 
                    string eq_code, 
                    string eq_cat_code, 
                    string eq_description, 
                    string eq_serial_no, 
                    string pur_date, 
                    string pur_billno, 
                    string w_date, 
                    string w_detail, 
                    string mainEuipNo, 
                    string eq_no, 
                    string crBy, 
                    decimal eq_amount, 
                    string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Asset_Querries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Asset_Querries(out string processInfo, string eq_code, string prm_1, string prm_2, string Logic, string login_id);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Asset_PurBillUpload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eInventory.lsAccounts.Asset_PurBillUploadResponse Asset_PurBillUpload(eInventory.lsAccounts.Asset_PurBillUploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferAsset(out string processInfo, string trfFrom, string trfTo, string emp_code, string eq_no, string trfType, string trf_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Vendor_master", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Vendor_master(out string processInfo, string v_type, string v_code, string v_name, string Contact_Person, string address, string district, string state, string Country, string ContactNo, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillDistrict(string state_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InformToeDiagnostic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InformToeDiagnostic(out string processInfo, string unit_id, decimal revision_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetWorkingStaffList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWorkingStaffList(string division, string unit_name, string district, string comp_code, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AttendanceMarkingByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AttendanceMarkingByDate(string parameter, string pMcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AttendanceMarking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AttendanceMarking(string parameter, string pMcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangePassword(string empCode, string oldPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetEmpSalaryLedgers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEmpSalaryLedgers(out string processInfo, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AuthenticateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateLogin(string unit_id, string login_id, string password, string accessFrom, string systemId, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetApprovalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetApprovalInfo(out string processInfo, string ReqId, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApprovalsPopup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApprovalsPopup(out string processInfo, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AccountFromToDateQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccountFromToDateQuery(out string processInfo, string unit_id, string login_id, string prm_1, string logic, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DeleteApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteApproval(out string processInfo, int auto_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Expense_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Expense_Queries(out string processInfo, string logic, string unit_id, string app_id, string from, string to, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_CashPayment_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet App_CashPayment_Queries(out string processInfo, string unit_id, string app_id, string logic, string login_id, string psw);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_Info_Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eInventory.lsAccounts.App_Info_InsertResponse App_Info_Insert(eInventory.lsAccounts.App_Info_InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AssetsName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AssetsName(out string processInfo, string asset_id);
        
        // CODEGEN: Parameter 'DownloadFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DownloadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eInventory.lsAccounts.DownloadFileResponse DownloadFile(eInventory.lsAccounts.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApproveRebate_queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApproveRebate_queries(out string processInfo, string App_Id, string prm_1, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApproveNewVendor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApproveNewVendor(out string processInfo, int autoid, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReCalculateDailyPf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReCalculateDailyPf(out string processInfo, string patient_id, string test_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VerifyIncConfirmation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyIncConfirmation(out string processInfo, string ref_code, string Logic, string from, string To);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertRemarkOfReferral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertRemarkOfReferral(out string processInfo, string ref_code, string Logic, string remark, string login_id, string ByApp, string prm_1, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CalculateMonthlyPF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CalculateMonthlyPF(out string processInfo, string d_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GenerateSalesVouchers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_GenerateSalesVouchers(out string processInfo, string unit_id, string from, string to, string Summary_Flag, string Receivable_Flag, string CallFrom, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportLedgerFromLedgerMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportLedgerFromLedgerMaster(out string processInfo, string unit_id, string ac_code, string logic, string SearchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_CashPayment_Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string App_CashPayment_Insert(string unit_id, string emp_code, string ledger_Code, decimal amount, string purpose, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AccountsSmallQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccountsSmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AppUnitExpCommRemarkIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AppUnitExpCommRemarkIns(string ReqId, string remark, string login_id, string emp_code, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SqlToTallyImport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SqlToTallyImport(out string CompanyInfo, string unit_id, string Logic, string from, string to, string prm_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateGroups(out string processInfo, string code_value, string group_name, string under_CodeValue, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateLedgers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateLedgers(out string processInfo, string ld_code, string unit_id, string unit_type, string ledger_name, string groupname, string party_name, string party_address, decimal openAmt, string openType, string PanNo, string TinNo, string InsertLogic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MergeOrDeleteLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MergeOrDeleteLedger(out string processInfo, string login_id, string unit_id, string ld_code, string ld_codeRepBy, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SetLedgerToDoctor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLedgerToDoctor(out string processInfo, string d_code, string ld_code, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CrossCheckFinSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CrossCheckFinSummary(out string processInfo, string unit_id, string date, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Daybook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Daybook(string unit_id, string dtFrom, string dtTo, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CheckLedgerExistance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckLedgerExistance(out string processInfo, string unit_id, string searchString, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Account_BooksInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Account_BooksInfo(out string processInfo, string unit_id, string from, string to, string ledgercode, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GetLedgerInfoForEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_GetLedgerInfoForEntry(out string processInfo, string unit_id, string vch_type, string ledgerfor, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GetVoucherSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_GetVoucherSummary(out string processInfo, string unit_id, string vch_type, string voucher_no, string vch_date, string logic, string login_id, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GetTranCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_GetTranCodes(out string processInfo, string unit_id, string dr_ledger, string cr_ledger, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_VoucherPosting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_VoucherPosting(out string processInfo, string unit_id, string vch_type, string vch_date, string dr_Ledger, string cr_ledger, decimal amount, string narration, string login_id, string voucher_no, string database, string logic, string GenFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_NewVoucherNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_NewVoucherNo(out string processInfo, string unit_id, string voucher_no, string login_id, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ac_SmallQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ac_SmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/LedgerMaster_update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LedgerMaster_update(out string processInfo, string unit_id, string Code_Category, string ld_code, string ld_name, decimal opening, string crdr, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportSingleLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportSingleLedger(out string processInfo, string unit_id, int code_category, string ld_code, string ld_name, decimal opening, decimal closing, string crdr, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_RebuildBooks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_RebuildBooks(out string processInfo, string unit_id, string from, string to, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GenerateBooks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_GenerateBooks(out string processInfo, string unit_id, string from, string to, string ServiceFlag, string Receivable_Flag, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetQueryResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetQueryResult(string query, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/QueryExecute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryExecute(string query, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSMS(string Message, string MobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/eDiagnosticSalesReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet eDiagnosticSalesReport(out string processInfo, string unit_id, string inputDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DiagnosticSalesReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DiagnosticSalesReport(out string processInfo, string unit_id, string inputDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSalarySlipInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSalarySlipInfo(string Unit_Id, string Login_id, string salDate, string empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/PayableSalaryInfoByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PayableSalaryInfoByDate(string emp_code, string login_id, string salDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateSalaryPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSalaryPaymentInfo(string emp_code, string trf_date, string payMode, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransactionAtHeadOffice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransactionAtHeadOffice(string trn_type, string pay_type, decimal amount, string login_id, string remarks);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eInventory.lsAccounts.TransferDocumentsResponse TransferDocuments(eInventory.lsAccounts.TransferDocumentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetDailySalesReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDailySalesReport(out string processInfo, string From, string to, string Logic, string unit_id, string _database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ServiceCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServiceCharges(out string processInfo, string unit_id, string dFrom, string dTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateIdOfNotCoded", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateIdOfNotCoded(out string processInfo, string d_code, string ArrayRecId, string separator, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VerifyPFInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyPFInformation(out string processInfo, string ref_code, string Logic, string prm_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RemarkAndContactInsertion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RemarkAndContactInsertion(out string processInfo, string ref_code, string Logic, string prm_1, string prm_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApproveRebateInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApproveRebateInfo(out string processInfo, string App_id, decimal app_amount, string app_by, string query, string remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_MergeLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_MergeLedger(out string processInfo, string repTo_Ledger_code, string repBy_Ledger_code, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VoucherModifyInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Form_SalesPDF", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Form_SalesPDFRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public System.Data.DataSet ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string FromTo;
        
        public Form_SalesPDFRequest() {
        }
        
        public Form_SalesPDFRequest(System.Data.DataSet ds, string FromTo) {
            this.ds = ds;
            this.FromTo = FromTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Form_SalesPDFResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Form_SalesPDFResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Form_SalesPDFResult;
        
        public Form_SalesPDFResponse() {
        }
        
        public Form_SalesPDFResponse(byte[] Form_SalesPDFResult) {
            this.Form_SalesPDFResult = Form_SalesPDFResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Asset_PurBillUpload", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Asset_PurBillUploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string eqNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string login_id;
        
        public Asset_PurBillUploadRequest() {
        }
        
        public Asset_PurBillUploadRequest(string eqNo, string extension, byte[] data, string login_id) {
            this.eqNo = eqNo;
            this.extension = extension;
            this.data = data;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Asset_PurBillUploadResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Asset_PurBillUploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Asset_PurBillUploadResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public Asset_PurBillUploadResponse() {
        }
        
        public Asset_PurBillUploadResponse(string Asset_PurBillUploadResult, string processInfo) {
            this.Asset_PurBillUploadResult = Asset_PurBillUploadResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="App_Info_Insert", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class App_Info_InsertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public int app_Head_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string asset_no;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public int lst_reading;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public int cur_reading;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public decimal amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=8)]
        public string doc_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public App_Info_InsertRequest() {
        }
        
        public App_Info_InsertRequest(string unit_id, int app_Head_Id, string remark, string asset_no, int lst_reading, int cur_reading, decimal amount, string login_id, string doc_name, byte[] data) {
            this.unit_id = unit_id;
            this.app_Head_Id = app_Head_Id;
            this.remark = remark;
            this.asset_no = asset_no;
            this.lst_reading = lst_reading;
            this.cur_reading = cur_reading;
            this.amount = amount;
            this.login_id = login_id;
            this.doc_name = doc_name;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="App_Info_InsertResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class App_Info_InsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string App_Info_InsertResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public App_Info_InsertResponse() {
        }
        
        public App_Info_InsertResponse(string App_Info_InsertResult, string processInfo) {
            this.App_Info_InsertResult = App_Info_InsertResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Path;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(string Path) {
            this.Path = Path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class DownloadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFileResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public DownloadFileResponse() {
        }
        
        public DownloadFileResponse(byte[] DownloadFileResult, string processInfo) {
            this.DownloadFileResult = DownloadFileResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferDocuments", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class TransferDocumentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Doc_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string Division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Unit_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string FinYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string FileType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public TransferDocumentsRequest() {
        }
        
        public TransferDocumentsRequest(string Doc_date, string Division, string Unit_Id, string FinYear, string FileType, string FileName, byte[] data) {
            this.Doc_date = Doc_date;
            this.Division = Division;
            this.Unit_Id = Unit_Id;
            this.FinYear = FinYear;
            this.FileType = FileType;
            this.FileName = FileName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferDocumentsResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class TransferDocumentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string TransferDocumentsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string msg;
        
        public TransferDocumentsResponse() {
        }
        
        public TransferDocumentsResponse(string TransferDocumentsResult, string msg) {
            this.TransferDocumentsResult = TransferDocumentsResult;
            this.msg = msg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Accounts_WebServiceSoapChannel : eInventory.lsAccounts.Accounts_WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Accounts_WebServiceSoapClient : System.ServiceModel.ClientBase<eInventory.lsAccounts.Accounts_WebServiceSoap>, eInventory.lsAccounts.Accounts_WebServiceSoap {
        
        public Accounts_WebServiceSoapClient() {
        }
        
        public Accounts_WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Accounts_WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Accounts_WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Accounts_WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet UpdateVoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic) {
            return base.Channel.UpdateVoucherModifyInfo(out processInfo, unit_id, voucher_no, logic);
        }
        
        public System.Data.DataSet GetPatientRegister(out string processInfo, string unit_id, string fromdate, string Logic, string SearchKey) {
            return base.Channel.GetPatientRegister(out processInfo, unit_id, fromdate, Logic, SearchKey);
        }
        
        public string AC_ModifyVoucher(string act_type, string voucher_no, string repTo_Ledger_code, string repBy_Ledger_code, string database) {
            return base.Channel.AC_ModifyVoucher(act_type, voucher_no, repTo_Ledger_code, repBy_Ledger_code, database);
        }
        
        public System.Data.DataSet Account_PurchaseQueries(out string processInfo, string unit_id, string purchase_id, string from, string to, string Logic) {
            return base.Channel.Account_PurchaseQueries(out processInfo, unit_id, purchase_id, from, to, Logic);
        }
        
        public string CorrectInvoiceType(out string processInfo, string unit_id, string purch_id, string inv_type) {
            return base.Channel.CorrectInvoiceType(out processInfo, unit_id, purch_id, inv_type);
        }
        
        public System.Data.DataSet TaxQueries(out string processInfo, string unit_id, string stateName, string logic, string from, string to) {
            return base.Channel.TaxQueries(out processInfo, unit_id, stateName, logic, from, to);
        }
        
        public System.Data.DataSet Pharmacy_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic) {
            return base.Channel.Pharmacy_UnitMismatchInfo(out processInfo, unit_id, from, to, logic);
        }
        
        public System.Data.DataSet Diagnostic_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic) {
            return base.Channel.Diagnostic_UnitMismatchInfo(out processInfo, unit_id, from, to, logic);
        }
        
        public System.Data.DataSet Form_Sales_UP(out string processInfo, string from, string to) {
            return base.Channel.Form_Sales_UP(out processInfo, from, to);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eInventory.lsAccounts.Form_SalesPDFResponse eInventory.lsAccounts.Accounts_WebServiceSoap.Form_SalesPDF(eInventory.lsAccounts.Form_SalesPDFRequest request) {
            return base.Channel.Form_SalesPDF(request);
        }
        
        public byte[] Form_SalesPDF(System.Data.DataSet ds, string FromTo) {
            eInventory.lsAccounts.Form_SalesPDFRequest inValue = new eInventory.lsAccounts.Form_SalesPDFRequest();
            inValue.ds = ds;
            inValue.FromTo = FromTo;
            eInventory.lsAccounts.Form_SalesPDFResponse retVal = ((eInventory.lsAccounts.Accounts_WebServiceSoap)(this)).Form_SalesPDF(inValue);
            return retVal.Form_SalesPDFResult;
        }
        
        public string InserteTax_4Det(out string processInfo, int mth, string finyear, string state) {
            return base.Channel.InserteTax_4Det(out processInfo, mth, finyear, state);
        }
        
        public System.Data.DataSet GetMonthlyTax(out string processInfo, int Month, string Fin_year, string Logic) {
            return base.Channel.GetMonthlyTax(out processInfo, Month, Fin_year, Logic);
        }
        
        public string AdjustSales(out string processInfo, string from, string to, string state, string login_id, decimal Reduce, string result) {
            return base.Channel.AdjustSales(out processInfo, from, to, state, login_id, Reduce, result);
        }
        
        public System.Data.DataSet Ac_GetReceivableSummary(out string processInfo, string Comp_id, string unit_id, string from, string to) {
            return base.Channel.Ac_GetReceivableSummary(out processInfo, Comp_id, unit_id, from, to);
        }
        
        public System.Data.DataSet ShopInfo_Queries(out string processInfo, string unit_id, string logic, string prm_1, string prm_2, string login_id) {
            return base.Channel.ShopInfo_Queries(out processInfo, unit_id, logic, prm_1, prm_2, login_id);
        }
        
        public string Ins_equip_info(
                    out string processInfo, 
                    string unit_id, 
                    string v_code, 
                    string eq_code, 
                    string eq_cat_code, 
                    string eq_description, 
                    string eq_serial_no, 
                    string pur_date, 
                    string pur_billno, 
                    string w_date, 
                    string w_detail, 
                    string mainEuipNo, 
                    string eq_no, 
                    string crBy, 
                    decimal eq_amount, 
                    string result) {
            return base.Channel.Ins_equip_info(out processInfo, unit_id, v_code, eq_code, eq_cat_code, eq_description, eq_serial_no, pur_date, pur_billno, w_date, w_detail, mainEuipNo, eq_no, crBy, eq_amount, result);
        }
        
        public System.Data.DataSet Asset_Querries(out string processInfo, string eq_code, string prm_1, string prm_2, string Logic, string login_id) {
            return base.Channel.Asset_Querries(out processInfo, eq_code, prm_1, prm_2, Logic, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eInventory.lsAccounts.Asset_PurBillUploadResponse eInventory.lsAccounts.Accounts_WebServiceSoap.Asset_PurBillUpload(eInventory.lsAccounts.Asset_PurBillUploadRequest request) {
            return base.Channel.Asset_PurBillUpload(request);
        }
        
        public string Asset_PurBillUpload(string eqNo, string extension, byte[] data, string login_id, out string processInfo) {
            eInventory.lsAccounts.Asset_PurBillUploadRequest inValue = new eInventory.lsAccounts.Asset_PurBillUploadRequest();
            inValue.eqNo = eqNo;
            inValue.extension = extension;
            inValue.data = data;
            inValue.login_id = login_id;
            eInventory.lsAccounts.Asset_PurBillUploadResponse retVal = ((eInventory.lsAccounts.Accounts_WebServiceSoap)(this)).Asset_PurBillUpload(inValue);
            processInfo = retVal.processInfo;
            return retVal.Asset_PurBillUploadResult;
        }
        
        public string TransferAsset(out string processInfo, string trfFrom, string trfTo, string emp_code, string eq_no, string trfType, string trf_date) {
            return base.Channel.TransferAsset(out processInfo, trfFrom, trfTo, emp_code, eq_no, trfType, trf_date);
        }
        
        public string Vendor_master(out string processInfo, string v_type, string v_code, string v_name, string Contact_Person, string address, string district, string state, string Country, string ContactNo, string result) {
            return base.Channel.Vendor_master(out processInfo, v_type, v_code, v_name, Contact_Person, address, district, state, Country, ContactNo, result);
        }
        
        public System.Data.DataSet fillState() {
            return base.Channel.fillState();
        }
        
        public System.Data.DataSet fillDistrict(string state_code) {
            return base.Channel.fillDistrict(state_code);
        }
        
        public System.Data.DataSet InformToeDiagnostic(out string processInfo, string unit_id, decimal revision_no) {
            return base.Channel.InformToeDiagnostic(out processInfo, unit_id, revision_no);
        }
        
        public System.Data.DataSet GetWorkingStaffList(string division, string unit_name, string district, string comp_code, string action) {
            return base.Channel.GetWorkingStaffList(division, unit_name, district, comp_code, action);
        }
        
        public string AttendanceMarkingByDate(string parameter, string pMcode) {
            return base.Channel.AttendanceMarkingByDate(parameter, pMcode);
        }
        
        public string AttendanceMarking(string parameter, string pMcode) {
            return base.Channel.AttendanceMarking(parameter, pMcode);
        }
        
        public string ChangePassword(string empCode, string oldPass, string newPass) {
            return base.Channel.ChangePassword(empCode, oldPass, newPass);
        }
        
        public System.Data.DataSet GetEmpSalaryLedgers(out string processInfo, string unit_id) {
            return base.Channel.GetEmpSalaryLedgers(out processInfo, unit_id);
        }
        
        public string AuthenticateLogin(string unit_id, string login_id, string password, string accessFrom, string systemId, string database) {
            return base.Channel.AuthenticateLogin(unit_id, login_id, password, accessFrom, systemId, database);
        }
        
        public System.Data.DataSet GetApprovalInfo(out string processInfo, string ReqId, string login_id, string logic) {
            return base.Channel.GetApprovalInfo(out processInfo, ReqId, login_id, logic);
        }
        
        public System.Data.DataSet ApprovalsPopup(out string processInfo, string login_id, string logic) {
            return base.Channel.ApprovalsPopup(out processInfo, login_id, logic);
        }
        
        public System.Data.DataSet AccountFromToDateQuery(out string processInfo, string unit_id, string login_id, string prm_1, string logic, string from, string to) {
            return base.Channel.AccountFromToDateQuery(out processInfo, unit_id, login_id, prm_1, logic, from, to);
        }
        
        public string DeleteApproval(out string processInfo, int auto_id) {
            return base.Channel.DeleteApproval(out processInfo, auto_id);
        }
        
        public System.Data.DataSet Expense_Queries(out string processInfo, string logic, string unit_id, string app_id, string from, string to, string login_id) {
            return base.Channel.Expense_Queries(out processInfo, logic, unit_id, app_id, from, to, login_id);
        }
        
        public System.Data.DataSet App_CashPayment_Queries(out string processInfo, string unit_id, string app_id, string logic, string login_id, string psw) {
            return base.Channel.App_CashPayment_Queries(out processInfo, unit_id, app_id, logic, login_id, psw);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eInventory.lsAccounts.App_Info_InsertResponse eInventory.lsAccounts.Accounts_WebServiceSoap.App_Info_Insert(eInventory.lsAccounts.App_Info_InsertRequest request) {
            return base.Channel.App_Info_Insert(request);
        }
        
        public string App_Info_Insert(string unit_id, int app_Head_Id, string remark, string asset_no, int lst_reading, int cur_reading, decimal amount, string login_id, string doc_name, byte[] data, out string processInfo) {
            eInventory.lsAccounts.App_Info_InsertRequest inValue = new eInventory.lsAccounts.App_Info_InsertRequest();
            inValue.unit_id = unit_id;
            inValue.app_Head_Id = app_Head_Id;
            inValue.remark = remark;
            inValue.asset_no = asset_no;
            inValue.lst_reading = lst_reading;
            inValue.cur_reading = cur_reading;
            inValue.amount = amount;
            inValue.login_id = login_id;
            inValue.doc_name = doc_name;
            inValue.data = data;
            eInventory.lsAccounts.App_Info_InsertResponse retVal = ((eInventory.lsAccounts.Accounts_WebServiceSoap)(this)).App_Info_Insert(inValue);
            processInfo = retVal.processInfo;
            return retVal.App_Info_InsertResult;
        }
        
        public System.Data.DataSet AssetsName(out string processInfo, string asset_id) {
            return base.Channel.AssetsName(out processInfo, asset_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eInventory.lsAccounts.DownloadFileResponse eInventory.lsAccounts.Accounts_WebServiceSoap.DownloadFile(eInventory.lsAccounts.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public byte[] DownloadFile(string Path, out string processInfo) {
            eInventory.lsAccounts.DownloadFileRequest inValue = new eInventory.lsAccounts.DownloadFileRequest();
            inValue.Path = Path;
            eInventory.lsAccounts.DownloadFileResponse retVal = ((eInventory.lsAccounts.Accounts_WebServiceSoap)(this)).DownloadFile(inValue);
            processInfo = retVal.processInfo;
            return retVal.DownloadFileResult;
        }
        
        public System.Data.DataSet ApproveRebate_queries(out string processInfo, string App_Id, string prm_1, string logic) {
            return base.Channel.ApproveRebate_queries(out processInfo, App_Id, prm_1, logic);
        }
        
        public string ApproveNewVendor(out string processInfo, int autoid, string login_id) {
            return base.Channel.ApproveNewVendor(out processInfo, autoid, login_id);
        }
        
        public string ReCalculateDailyPf(out string processInfo, string patient_id, string test_code) {
            return base.Channel.ReCalculateDailyPf(out processInfo, patient_id, test_code);
        }
        
        public System.Data.DataSet VerifyIncConfirmation(out string processInfo, string ref_code, string Logic, string from, string To) {
            return base.Channel.VerifyIncConfirmation(out processInfo, ref_code, Logic, from, To);
        }
        
        public string InsertRemarkOfReferral(out string processInfo, string ref_code, string Logic, string remark, string login_id, string ByApp, string prm_1, string result) {
            return base.Channel.InsertRemarkOfReferral(out processInfo, ref_code, Logic, remark, login_id, ByApp, prm_1, result);
        }
        
        public string CalculateMonthlyPF(out string processInfo, string d_code) {
            return base.Channel.CalculateMonthlyPF(out processInfo, d_code);
        }
        
        public string AC_GenerateSalesVouchers(out string processInfo, string unit_id, string from, string to, string Summary_Flag, string Receivable_Flag, string CallFrom, string login_id) {
            return base.Channel.AC_GenerateSalesVouchers(out processInfo, unit_id, from, to, Summary_Flag, Receivable_Flag, CallFrom, login_id);
        }
        
        public System.Data.DataSet ImportLedgerFromLedgerMaster(out string processInfo, string unit_id, string ac_code, string logic, string SearchKey) {
            return base.Channel.ImportLedgerFromLedgerMaster(out processInfo, unit_id, ac_code, logic, SearchKey);
        }
        
        public string App_CashPayment_Insert(string unit_id, string emp_code, string ledger_Code, decimal amount, string purpose, string login_id) {
            return base.Channel.App_CashPayment_Insert(unit_id, emp_code, ledger_Code, amount, purpose, login_id);
        }
        
        public System.Data.DataSet AccountsSmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2) {
            return base.Channel.AccountsSmallQueries(out processInfo, login_id, unit_id, logic, prm_1, prm_2);
        }
        
        public string AppUnitExpCommRemarkIns(string ReqId, string remark, string login_id, string emp_code, string result) {
            return base.Channel.AppUnitExpCommRemarkIns(ReqId, remark, login_id, emp_code, result);
        }
        
        public System.Data.DataSet SqlToTallyImport(out string CompanyInfo, string unit_id, string Logic, string from, string to, string prm_1) {
            return base.Channel.SqlToTallyImport(out CompanyInfo, unit_id, Logic, from, to, prm_1);
        }
        
        public string CreateGroups(out string processInfo, string code_value, string group_name, string under_CodeValue, string Logic) {
            return base.Channel.CreateGroups(out processInfo, code_value, group_name, under_CodeValue, Logic);
        }
        
        public string CreateLedgers(out string processInfo, string ld_code, string unit_id, string unit_type, string ledger_name, string groupname, string party_name, string party_address, decimal openAmt, string openType, string PanNo, string TinNo, string InsertLogic) {
            return base.Channel.CreateLedgers(out processInfo, ld_code, unit_id, unit_type, ledger_name, groupname, party_name, party_address, openAmt, openType, PanNo, TinNo, InsertLogic);
        }
        
        public string MergeOrDeleteLedger(out string processInfo, string login_id, string unit_id, string ld_code, string ld_codeRepBy, string Logic) {
            return base.Channel.MergeOrDeleteLedger(out processInfo, login_id, unit_id, ld_code, ld_codeRepBy, Logic);
        }
        
        public string SetLedgerToDoctor(out string processInfo, string d_code, string ld_code, string login_id) {
            return base.Channel.SetLedgerToDoctor(out processInfo, d_code, ld_code, login_id);
        }
        
        public string CrossCheckFinSummary(out string processInfo, string unit_id, string date, string database) {
            return base.Channel.CrossCheckFinSummary(out processInfo, unit_id, date, database);
        }
        
        public System.Data.DataSet Daybook(string unit_id, string dtFrom, string dtTo, string database) {
            return base.Channel.Daybook(unit_id, dtFrom, dtTo, database);
        }
        
        public string CheckLedgerExistance(out string processInfo, string unit_id, string searchString, string database) {
            return base.Channel.CheckLedgerExistance(out processInfo, unit_id, searchString, database);
        }
        
        public System.Data.DataSet Account_BooksInfo(out string processInfo, string unit_id, string from, string to, string ledgercode, string database) {
            return base.Channel.Account_BooksInfo(out processInfo, unit_id, from, to, ledgercode, database);
        }
        
        public System.Data.DataSet AC_GetLedgerInfoForEntry(out string processInfo, string unit_id, string vch_type, string ledgerfor, string database) {
            return base.Channel.AC_GetLedgerInfoForEntry(out processInfo, unit_id, vch_type, ledgerfor, database);
        }
        
        public System.Data.DataSet AC_GetVoucherSummary(out string processInfo, string unit_id, string vch_type, string voucher_no, string vch_date, string logic, string login_id, string database) {
            return base.Channel.AC_GetVoucherSummary(out processInfo, unit_id, vch_type, voucher_no, vch_date, logic, login_id, database);
        }
        
        public string AC_GetTranCodes(out string processInfo, string unit_id, string dr_ledger, string cr_ledger, string database) {
            return base.Channel.AC_GetTranCodes(out processInfo, unit_id, dr_ledger, cr_ledger, database);
        }
        
        public System.Data.DataSet AC_VoucherPosting(out string processInfo, string unit_id, string vch_type, string vch_date, string dr_Ledger, string cr_ledger, decimal amount, string narration, string login_id, string voucher_no, string database, string logic, string GenFrom) {
            return base.Channel.AC_VoucherPosting(out processInfo, unit_id, vch_type, vch_date, dr_Ledger, cr_ledger, amount, narration, login_id, voucher_no, database, logic, GenFrom);
        }
        
        public string AC_NewVoucherNo(out string processInfo, string unit_id, string voucher_no, string login_id, string database) {
            return base.Channel.AC_NewVoucherNo(out processInfo, unit_id, voucher_no, login_id, database);
        }
        
        public System.Data.DataSet Ac_SmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2, string database) {
            return base.Channel.Ac_SmallQueries(out processInfo, login_id, unit_id, logic, prm_1, prm_2, database);
        }
        
        public string LedgerMaster_update(out string processInfo, string unit_id, string Code_Category, string ld_code, string ld_name, decimal opening, string crdr, string database) {
            return base.Channel.LedgerMaster_update(out processInfo, unit_id, Code_Category, ld_code, ld_name, opening, crdr, database);
        }
        
        public string ImportSingleLedger(out string processInfo, string unit_id, int code_category, string ld_code, string ld_name, decimal opening, decimal closing, string crdr, string database) {
            return base.Channel.ImportSingleLedger(out processInfo, unit_id, code_category, ld_code, ld_name, opening, closing, crdr, database);
        }
        
        public string AC_RebuildBooks(out string processInfo, string unit_id, string from, string to, string database) {
            return base.Channel.AC_RebuildBooks(out processInfo, unit_id, from, to, database);
        }
        
        public string AC_GenerateBooks(out string processInfo, string unit_id, string from, string to, string ServiceFlag, string Receivable_Flag, string database) {
            return base.Channel.AC_GenerateBooks(out processInfo, unit_id, from, to, ServiceFlag, Receivable_Flag, database);
        }
        
        public System.Data.DataSet GetQueryResult(string query, string Database) {
            return base.Channel.GetQueryResult(query, Database);
        }
        
        public string QueryExecute(string query, string Database) {
            return base.Channel.QueryExecute(query, Database);
        }
        
        public string SendSMS(string Message, string MobileNo) {
            return base.Channel.SendSMS(Message, MobileNo);
        }
        
        public System.Data.DataSet eDiagnosticSalesReport(out string processInfo, string unit_id, string inputDate) {
            return base.Channel.eDiagnosticSalesReport(out processInfo, unit_id, inputDate);
        }
        
        public System.Data.DataSet DiagnosticSalesReport(out string processInfo, string unit_id, string inputDate) {
            return base.Channel.DiagnosticSalesReport(out processInfo, unit_id, inputDate);
        }
        
        public System.Data.DataSet GetSalarySlipInfo(string Unit_Id, string Login_id, string salDate, string empcode) {
            return base.Channel.GetSalarySlipInfo(Unit_Id, Login_id, salDate, empcode);
        }
        
        public System.Data.DataSet PayableSalaryInfoByDate(string emp_code, string login_id, string salDate) {
            return base.Channel.PayableSalaryInfoByDate(emp_code, login_id, salDate);
        }
        
        public string UpdateSalaryPaymentInfo(string emp_code, string trf_date, string payMode, string unit_id, string login_id) {
            return base.Channel.UpdateSalaryPaymentInfo(emp_code, trf_date, payMode, unit_id, login_id);
        }
        
        public string TransactionAtHeadOffice(string trn_type, string pay_type, decimal amount, string login_id, string remarks) {
            return base.Channel.TransactionAtHeadOffice(trn_type, pay_type, amount, login_id, remarks);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eInventory.lsAccounts.TransferDocumentsResponse eInventory.lsAccounts.Accounts_WebServiceSoap.TransferDocuments(eInventory.lsAccounts.TransferDocumentsRequest request) {
            return base.Channel.TransferDocuments(request);
        }
        
        public string TransferDocuments(string Doc_date, string Division, string Unit_Id, string FinYear, string FileType, string FileName, byte[] data, out string msg) {
            eInventory.lsAccounts.TransferDocumentsRequest inValue = new eInventory.lsAccounts.TransferDocumentsRequest();
            inValue.Doc_date = Doc_date;
            inValue.Division = Division;
            inValue.Unit_Id = Unit_Id;
            inValue.FinYear = FinYear;
            inValue.FileType = FileType;
            inValue.FileName = FileName;
            inValue.data = data;
            eInventory.lsAccounts.TransferDocumentsResponse retVal = ((eInventory.lsAccounts.Accounts_WebServiceSoap)(this)).TransferDocuments(inValue);
            msg = retVal.msg;
            return retVal.TransferDocumentsResult;
        }
        
        public System.Data.DataSet GetDailySalesReport(out string processInfo, string From, string to, string Logic, string unit_id, string _database) {
            return base.Channel.GetDailySalesReport(out processInfo, From, to, Logic, unit_id, _database);
        }
        
        public string ServiceCharges(out string processInfo, string unit_id, string dFrom, string dTo) {
            return base.Channel.ServiceCharges(out processInfo, unit_id, dFrom, dTo);
        }
        
        public string UpdateIdOfNotCoded(out string processInfo, string d_code, string ArrayRecId, string separator, string login_id) {
            return base.Channel.UpdateIdOfNotCoded(out processInfo, d_code, ArrayRecId, separator, login_id);
        }
        
        public System.Data.DataSet VerifyPFInformation(out string processInfo, string ref_code, string Logic, string prm_1) {
            return base.Channel.VerifyPFInformation(out processInfo, ref_code, Logic, prm_1);
        }
        
        public string RemarkAndContactInsertion(out string processInfo, string ref_code, string Logic, string prm_1, string prm_2) {
            return base.Channel.RemarkAndContactInsertion(out processInfo, ref_code, Logic, prm_1, prm_2);
        }
        
        public string ApproveRebateInfo(out string processInfo, string App_id, decimal app_amount, string app_by, string query, string remarks) {
            return base.Channel.ApproveRebateInfo(out processInfo, App_id, app_amount, app_by, query, remarks);
        }
        
        public string AC_MergeLedger(out string processInfo, string repTo_Ledger_code, string repBy_Ledger_code, string login_id) {
            return base.Channel.AC_MergeLedger(out processInfo, repTo_Ledger_code, repBy_Ledger_code, login_id);
        }
        
        public string VoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic) {
            return base.Channel.VoucherModifyInfo(out processInfo, unit_id, voucher_no, logic);
        }
    }
}
