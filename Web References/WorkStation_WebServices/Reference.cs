//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace eInventory.WorkStation_WebServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WorkStation_WebServicesSoap", Namespace="http://tempuri.org/")]
    public partial class WorkStation_WebServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetQueryResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueeryExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentRelatedToJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBulkMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMailDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadMailFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownLoadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConversationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RootFileToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTextDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectoryCleanupUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppUnitExpCommRemarkInsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback pUpdateQueriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_ComplaintWebOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WorkStation_WebServices() {
            this.Url = global::eInventory.Properties.Settings.Default.eInventory_WorkStation_WebServices_WorkStation_WebServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetQueryResultCompletedEventHandler GetQueryResultCompleted;
        
        /// <remarks/>
        public event QueeryExecuteCompletedEventHandler QueeryExecuteCompleted;
        
        /// <remarks/>
        public event createNewJobCompletedEventHandler createNewJobCompleted;
        
        /// <remarks/>
        public event UploadDocumentRelatedToJobCompletedEventHandler UploadDocumentRelatedToJobCompleted;
        
        /// <remarks/>
        public event GetEmailsCompletedEventHandler GetEmailsCompleted;
        
        /// <remarks/>
        public event CreateNewMailCompletedEventHandler CreateNewMailCompleted;
        
        /// <remarks/>
        public event CreateBulkMailCompletedEventHandler CreateBulkMailCompleted;
        
        /// <remarks/>
        public event UploadMailDocumentCompletedEventHandler UploadMailDocumentCompleted;
        
        /// <remarks/>
        public event DownloadMailFileCompletedEventHandler DownloadMailFileCompleted;
        
        /// <remarks/>
        public event DownLoadFileCompletedEventHandler DownLoadFileCompleted;
        
        /// <remarks/>
        public event CloseMailCompletedEventHandler CloseMailCompleted;
        
        /// <remarks/>
        public event GetConversationDetailCompletedEventHandler GetConversationDetailCompleted;
        
        /// <remarks/>
        public event RootFileToServerCompletedEventHandler RootFileToServerCompleted;
        
        /// <remarks/>
        public event InsertTextDataCompletedEventHandler InsertTextDataCompleted;
        
        /// <remarks/>
        public event DirectoryCleanupUtilityCompletedEventHandler DirectoryCleanupUtilityCompleted;
        
        /// <remarks/>
        public event AppUnitExpCommRemarkInsCompletedEventHandler AppUnitExpCommRemarkInsCompleted;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event pUpdateQueriesCompletedEventHandler pUpdateQueriesCompleted;
        
        /// <remarks/>
        public event Insert_ComplaintWebCompletedEventHandler Insert_ComplaintWebCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryResult(string query, string Database) {
            object[] results = this.Invoke("GetQueryResult", new object[] {
                        query,
                        Database});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryResultAsync(string query, string Database) {
            this.GetQueryResultAsync(query, Database, null);
        }
        
        /// <remarks/>
        public void GetQueryResultAsync(string query, string Database, object userState) {
            if ((this.GetQueryResultOperationCompleted == null)) {
                this.GetQueryResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryResultOperationCompleted);
            }
            this.InvokeAsync("GetQueryResult", new object[] {
                        query,
                        Database}, this.GetQueryResultOperationCompleted, userState);
        }
        
        private void OnGetQueryResultOperationCompleted(object arg) {
            if ((this.GetQueryResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryResultCompleted(this, new GetQueryResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueeryExecute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueeryExecute(string query, string Database) {
            object[] results = this.Invoke("QueeryExecute", new object[] {
                        query,
                        Database});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueeryExecuteAsync(string query, string Database) {
            this.QueeryExecuteAsync(query, Database, null);
        }
        
        /// <remarks/>
        public void QueeryExecuteAsync(string query, string Database, object userState) {
            if ((this.QueeryExecuteOperationCompleted == null)) {
                this.QueeryExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueeryExecuteOperationCompleted);
            }
            this.InvokeAsync("QueeryExecute", new object[] {
                        query,
                        Database}, this.QueeryExecuteOperationCompleted, userState);
        }
        
        private void OnQueeryExecuteOperationCompleted(object arg) {
            if ((this.QueeryExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueeryExecuteCompleted(this, new QueeryExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createNewJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createNewJob(string subject, string Description, string assigned_by, string assigned_to, System.DateTime finish_date, string priority, string Comment, string Attachment, string FileName, string Location, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("createNewJob", new object[] {
                        subject,
                        Description,
                        assigned_by,
                        assigned_to,
                        finish_date,
                        priority,
                        Comment,
                        Attachment,
                        FileName,
                        Location,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewJobAsync(string subject, string Description, string assigned_by, string assigned_to, System.DateTime finish_date, string priority, string Comment, string Attachment, string FileName, string Location, byte[] data) {
            this.createNewJobAsync(subject, Description, assigned_by, assigned_to, finish_date, priority, Comment, Attachment, FileName, Location, data, null);
        }
        
        /// <remarks/>
        public void createNewJobAsync(string subject, string Description, string assigned_by, string assigned_to, System.DateTime finish_date, string priority, string Comment, string Attachment, string FileName, string Location, byte[] data, object userState) {
            if ((this.createNewJobOperationCompleted == null)) {
                this.createNewJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewJobOperationCompleted);
            }
            this.InvokeAsync("createNewJob", new object[] {
                        subject,
                        Description,
                        assigned_by,
                        assigned_to,
                        finish_date,
                        priority,
                        Comment,
                        Attachment,
                        FileName,
                        Location,
                        data}, this.createNewJobOperationCompleted, userState);
        }
        
        private void OncreateNewJobOperationCompleted(object arg) {
            if ((this.createNewJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewJobCompleted(this, new createNewJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDocumentRelatedToJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadDocumentRelatedToJob(string JobId, string Comment, string Attachment, string FileName, string Location, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("UploadDocumentRelatedToJob", new object[] {
                        JobId,
                        Comment,
                        Attachment,
                        FileName,
                        Location,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentRelatedToJobAsync(string JobId, string Comment, string Attachment, string FileName, string Location, byte[] data) {
            this.UploadDocumentRelatedToJobAsync(JobId, Comment, Attachment, FileName, Location, data, null);
        }
        
        /// <remarks/>
        public void UploadDocumentRelatedToJobAsync(string JobId, string Comment, string Attachment, string FileName, string Location, byte[] data, object userState) {
            if ((this.UploadDocumentRelatedToJobOperationCompleted == null)) {
                this.UploadDocumentRelatedToJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentRelatedToJobOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentRelatedToJob", new object[] {
                        JobId,
                        Comment,
                        Attachment,
                        FileName,
                        Location,
                        data}, this.UploadDocumentRelatedToJobOperationCompleted, userState);
        }
        
        private void OnUploadDocumentRelatedToJobOperationCompleted(object arg) {
            if ((this.UploadDocumentRelatedToJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentRelatedToJobCompleted(this, new UploadDocumentRelatedToJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEmails(string strLogin) {
            object[] results = this.Invoke("GetEmails", new object[] {
                        strLogin});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailsAsync(string strLogin) {
            this.GetEmailsAsync(strLogin, null);
        }
        
        /// <remarks/>
        public void GetEmailsAsync(string strLogin, object userState) {
            if ((this.GetEmailsOperationCompleted == null)) {
                this.GetEmailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailsOperationCompleted);
            }
            this.InvokeAsync("GetEmails", new object[] {
                        strLogin}, this.GetEmailsOperationCompleted, userState);
        }
        
        private void OnGetEmailsOperationCompleted(object arg) {
            if ((this.GetEmailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailsCompleted(this, new GetEmailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateNewMail(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string eType) {
            object[] results = this.Invoke("CreateNewMail", new object[] {
                        loginId,
                        TowhomSent,
                        Subject,
                        Conversation,
                        strFilename,
                        data,
                        eType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewMailAsync(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, byte[] data, string eType) {
            this.CreateNewMailAsync(loginId, TowhomSent, Subject, Conversation, strFilename, data, eType, null);
        }
        
        /// <remarks/>
        public void CreateNewMailAsync(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, byte[] data, string eType, object userState) {
            if ((this.CreateNewMailOperationCompleted == null)) {
                this.CreateNewMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewMailOperationCompleted);
            }
            this.InvokeAsync("CreateNewMail", new object[] {
                        loginId,
                        TowhomSent,
                        Subject,
                        Conversation,
                        strFilename,
                        data,
                        eType}, this.CreateNewMailOperationCompleted, userState);
        }
        
        private void OnCreateNewMailOperationCompleted(object arg) {
            if ((this.CreateNewMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewMailCompleted(this, new CreateNewMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateBulkMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateBulkMail(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, string file_path) {
            object[] results = this.Invoke("CreateBulkMail", new object[] {
                        loginId,
                        TowhomSent,
                        Subject,
                        Conversation,
                        strFilename,
                        file_path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBulkMailAsync(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, string file_path) {
            this.CreateBulkMailAsync(loginId, TowhomSent, Subject, Conversation, strFilename, file_path, null);
        }
        
        /// <remarks/>
        public void CreateBulkMailAsync(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, string file_path, object userState) {
            if ((this.CreateBulkMailOperationCompleted == null)) {
                this.CreateBulkMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBulkMailOperationCompleted);
            }
            this.InvokeAsync("CreateBulkMail", new object[] {
                        loginId,
                        TowhomSent,
                        Subject,
                        Conversation,
                        strFilename,
                        file_path}, this.CreateBulkMailOperationCompleted, userState);
        }
        
        private void OnCreateBulkMailOperationCompleted(object arg) {
            if ((this.CreateBulkMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBulkMailCompleted(this, new CreateBulkMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMailDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadMailDocument(string sender, string sentype, string extension, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("UploadMailDocument", new object[] {
                        sender,
                        sentype,
                        extension,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMailDocumentAsync(string sender, string sentype, string extension, byte[] data) {
            this.UploadMailDocumentAsync(sender, sentype, extension, data, null);
        }
        
        /// <remarks/>
        public void UploadMailDocumentAsync(string sender, string sentype, string extension, byte[] data, object userState) {
            if ((this.UploadMailDocumentOperationCompleted == null)) {
                this.UploadMailDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMailDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadMailDocument", new object[] {
                        sender,
                        sentype,
                        extension,
                        data}, this.UploadMailDocumentOperationCompleted, userState);
        }
        
        private void OnUploadMailDocumentOperationCompleted(object arg) {
            if ((this.UploadMailDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMailDocumentCompleted(this, new UploadMailDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadMailFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadMailFile(string FilePath, out string processInfo) {
            object[] results = this.Invoke("DownloadMailFile", new object[] {
                        FilePath});
            processInfo = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadMailFileAsync(string FilePath) {
            this.DownloadMailFileAsync(FilePath, null);
        }
        
        /// <remarks/>
        public void DownloadMailFileAsync(string FilePath, object userState) {
            if ((this.DownloadMailFileOperationCompleted == null)) {
                this.DownloadMailFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadMailFileOperationCompleted);
            }
            this.InvokeAsync("DownloadMailFile", new object[] {
                        FilePath}, this.DownloadMailFileOperationCompleted, userState);
        }
        
        private void OnDownloadMailFileOperationCompleted(object arg) {
            if ((this.DownloadMailFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadMailFileCompleted(this, new DownloadMailFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownLoadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownLoadFile(string filename, string RecId, string file_type) {
            object[] results = this.Invoke("DownLoadFile", new object[] {
                        filename,
                        RecId,
                        file_type});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownLoadFileAsync(string filename, string RecId, string file_type) {
            this.DownLoadFileAsync(filename, RecId, file_type, null);
        }
        
        /// <remarks/>
        public void DownLoadFileAsync(string filename, string RecId, string file_type, object userState) {
            if ((this.DownLoadFileOperationCompleted == null)) {
                this.DownLoadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownLoadFileOperationCompleted);
            }
            this.InvokeAsync("DownLoadFile", new object[] {
                        filename,
                        RecId,
                        file_type}, this.DownLoadFileOperationCompleted, userState);
        }
        
        private void OnDownLoadFileOperationCompleted(object arg) {
            if ((this.DownLoadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownLoadFileCompleted(this, new DownLoadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseMail(string[] CheckedItems, string strLogin) {
            this.Invoke("CloseMail", new object[] {
                        CheckedItems,
                        strLogin});
        }
        
        /// <remarks/>
        public void CloseMailAsync(string[] CheckedItems, string strLogin) {
            this.CloseMailAsync(CheckedItems, strLogin, null);
        }
        
        /// <remarks/>
        public void CloseMailAsync(string[] CheckedItems, string strLogin, object userState) {
            if ((this.CloseMailOperationCompleted == null)) {
                this.CloseMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseMailOperationCompleted);
            }
            this.InvokeAsync("CloseMail", new object[] {
                        CheckedItems,
                        strLogin}, this.CloseMailOperationCompleted, userState);
        }
        
        private void OnCloseMailOperationCompleted(object arg) {
            if ((this.CloseMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConversationDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConversationDetail(string LoginId, string Conv_id, string subject, string SubjectId) {
            object[] results = this.Invoke("GetConversationDetail", new object[] {
                        LoginId,
                        Conv_id,
                        subject,
                        SubjectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConversationDetailAsync(string LoginId, string Conv_id, string subject, string SubjectId) {
            this.GetConversationDetailAsync(LoginId, Conv_id, subject, SubjectId, null);
        }
        
        /// <remarks/>
        public void GetConversationDetailAsync(string LoginId, string Conv_id, string subject, string SubjectId, object userState) {
            if ((this.GetConversationDetailOperationCompleted == null)) {
                this.GetConversationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConversationDetailOperationCompleted);
            }
            this.InvokeAsync("GetConversationDetail", new object[] {
                        LoginId,
                        Conv_id,
                        subject,
                        SubjectId}, this.GetConversationDetailOperationCompleted, userState);
        }
        
        private void OnGetConversationDetailOperationCompleted(object arg) {
            if ((this.GetConversationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConversationDetailCompleted(this, new GetConversationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RootFileToServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RootFileToServer(string filename, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("RootFileToServer", new object[] {
                        filename,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RootFileToServerAsync(string filename, byte[] data) {
            this.RootFileToServerAsync(filename, data, null);
        }
        
        /// <remarks/>
        public void RootFileToServerAsync(string filename, byte[] data, object userState) {
            if ((this.RootFileToServerOperationCompleted == null)) {
                this.RootFileToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRootFileToServerOperationCompleted);
            }
            this.InvokeAsync("RootFileToServer", new object[] {
                        filename,
                        data}, this.RootFileToServerOperationCompleted, userState);
        }
        
        private void OnRootFileToServerOperationCompleted(object arg) {
            if ((this.RootFileToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RootFileToServerCompleted(this, new RootFileToServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTextData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTextData(string login_id, string data) {
            object[] results = this.Invoke("InsertTextData", new object[] {
                        login_id,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTextDataAsync(string login_id, string data) {
            this.InsertTextDataAsync(login_id, data, null);
        }
        
        /// <remarks/>
        public void InsertTextDataAsync(string login_id, string data, object userState) {
            if ((this.InsertTextDataOperationCompleted == null)) {
                this.InsertTextDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTextDataOperationCompleted);
            }
            this.InvokeAsync("InsertTextData", new object[] {
                        login_id,
                        data}, this.InsertTextDataOperationCompleted, userState);
        }
        
        private void OnInsertTextDataOperationCompleted(object arg) {
            if ((this.InsertTextDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTextDataCompleted(this, new InsertTextDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DirectoryCleanupUtility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DirectoryCleanupUtility(int DirectoryCleanupDay) {
            object[] results = this.Invoke("DirectoryCleanupUtility", new object[] {
                        DirectoryCleanupDay});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DirectoryCleanupUtilityAsync(int DirectoryCleanupDay) {
            this.DirectoryCleanupUtilityAsync(DirectoryCleanupDay, null);
        }
        
        /// <remarks/>
        public void DirectoryCleanupUtilityAsync(int DirectoryCleanupDay, object userState) {
            if ((this.DirectoryCleanupUtilityOperationCompleted == null)) {
                this.DirectoryCleanupUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectoryCleanupUtilityOperationCompleted);
            }
            this.InvokeAsync("DirectoryCleanupUtility", new object[] {
                        DirectoryCleanupDay}, this.DirectoryCleanupUtilityOperationCompleted, userState);
        }
        
        private void OnDirectoryCleanupUtilityOperationCompleted(object arg) {
            if ((this.DirectoryCleanupUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectoryCleanupUtilityCompleted(this, new DirectoryCleanupUtilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AppUnitExpCommRemarkIns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AppUnitExpCommRemarkIns(string ReqId, string remark, string login_id, string emp_code, string result) {
            object[] results = this.Invoke("AppUnitExpCommRemarkIns", new object[] {
                        ReqId,
                        remark,
                        login_id,
                        emp_code,
                        result});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AppUnitExpCommRemarkInsAsync(string ReqId, string remark, string login_id, string emp_code, string result) {
            this.AppUnitExpCommRemarkInsAsync(ReqId, remark, login_id, emp_code, result, null);
        }
        
        /// <remarks/>
        public void AppUnitExpCommRemarkInsAsync(string ReqId, string remark, string login_id, string emp_code, string result, object userState) {
            if ((this.AppUnitExpCommRemarkInsOperationCompleted == null)) {
                this.AppUnitExpCommRemarkInsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppUnitExpCommRemarkInsOperationCompleted);
            }
            this.InvokeAsync("AppUnitExpCommRemarkIns", new object[] {
                        ReqId,
                        remark,
                        login_id,
                        emp_code,
                        result}, this.AppUnitExpCommRemarkInsOperationCompleted, userState);
        }
        
        private void OnAppUnitExpCommRemarkInsOperationCompleted(object arg) {
            if ((this.AppUnitExpCommRemarkInsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppUnitExpCommRemarkInsCompleted(this, new AppUnitExpCommRemarkInsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMS(string Message, string MobileNo) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        Message,
                        MobileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Message, string MobileNo) {
            this.SendSMSAsync(Message, MobileNo, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Message, string MobileNo, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        Message,
                        MobileNo}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/pUpdateQueries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string pUpdateQueries(string login_id, string logic, string prm_1, string prm_2, string prm_3, out string processInfo) {
            object[] results = this.Invoke("pUpdateQueries", new object[] {
                        login_id,
                        logic,
                        prm_1,
                        prm_2,
                        prm_3});
            processInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void pUpdateQueriesAsync(string login_id, string logic, string prm_1, string prm_2, string prm_3) {
            this.pUpdateQueriesAsync(login_id, logic, prm_1, prm_2, prm_3, null);
        }
        
        /// <remarks/>
        public void pUpdateQueriesAsync(string login_id, string logic, string prm_1, string prm_2, string prm_3, object userState) {
            if ((this.pUpdateQueriesOperationCompleted == null)) {
                this.pUpdateQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpUpdateQueriesOperationCompleted);
            }
            this.InvokeAsync("pUpdateQueries", new object[] {
                        login_id,
                        logic,
                        prm_1,
                        prm_2,
                        prm_3}, this.pUpdateQueriesOperationCompleted, userState);
        }
        
        private void OnpUpdateQueriesOperationCompleted(object arg) {
            if ((this.pUpdateQueriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pUpdateQueriesCompleted(this, new pUpdateQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_ComplaintWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insert_ComplaintWeb(string complcode, string remarksby, string remarks, decimal amount, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string extension, string logic, out string processInfo) {
            object[] results = this.Invoke("Insert_ComplaintWeb", new object[] {
                        complcode,
                        remarksby,
                        remarks,
                        amount,
                        data,
                        extension,
                        logic});
            processInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_ComplaintWebAsync(string complcode, string remarksby, string remarks, decimal amount, byte[] data, string extension, string logic) {
            this.Insert_ComplaintWebAsync(complcode, remarksby, remarks, amount, data, extension, logic, null);
        }
        
        /// <remarks/>
        public void Insert_ComplaintWebAsync(string complcode, string remarksby, string remarks, decimal amount, byte[] data, string extension, string logic, object userState) {
            if ((this.Insert_ComplaintWebOperationCompleted == null)) {
                this.Insert_ComplaintWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_ComplaintWebOperationCompleted);
            }
            this.InvokeAsync("Insert_ComplaintWeb", new object[] {
                        complcode,
                        remarksby,
                        remarks,
                        amount,
                        data,
                        extension,
                        logic}, this.Insert_ComplaintWebOperationCompleted, userState);
        }
        
        private void OnInsert_ComplaintWebOperationCompleted(object arg) {
            if ((this.Insert_ComplaintWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_ComplaintWebCompleted(this, new Insert_ComplaintWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryResultCompletedEventHandler(object sender, GetQueryResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueeryExecuteCompletedEventHandler(object sender, QueeryExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueeryExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueeryExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createNewJobCompletedEventHandler(object sender, createNewJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UploadDocumentRelatedToJobCompletedEventHandler(object sender, UploadDocumentRelatedToJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentRelatedToJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentRelatedToJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmailsCompletedEventHandler(object sender, GetEmailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateNewMailCompletedEventHandler(object sender, CreateNewMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateBulkMailCompletedEventHandler(object sender, CreateBulkMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBulkMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBulkMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UploadMailDocumentCompletedEventHandler(object sender, UploadMailDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMailDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMailDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DownloadMailFileCompletedEventHandler(object sender, DownloadMailFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadMailFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadMailFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string processInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DownLoadFileCompletedEventHandler(object sender, DownLoadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownLoadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownLoadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CloseMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConversationDetailCompletedEventHandler(object sender, GetConversationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConversationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConversationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RootFileToServerCompletedEventHandler(object sender, RootFileToServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RootFileToServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RootFileToServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertTextDataCompletedEventHandler(object sender, InsertTextDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTextDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTextDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DirectoryCleanupUtilityCompletedEventHandler(object sender, DirectoryCleanupUtilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectoryCleanupUtilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectoryCleanupUtilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AppUnitExpCommRemarkInsCompletedEventHandler(object sender, AppUnitExpCommRemarkInsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppUnitExpCommRemarkInsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppUnitExpCommRemarkInsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void pUpdateQueriesCompletedEventHandler(object sender, pUpdateQueriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pUpdateQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pUpdateQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string processInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Insert_ComplaintWebCompletedEventHandler(object sender, Insert_ComplaintWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_ComplaintWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_ComplaintWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string processInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591